.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "TERMUX" "1" "September 25, 2021" "As of application version 0.117" "Termux User Documentation"
.hy
.SH NAME
.PP
\f[B]Termux\f[R] - a terminal emulator application for Android OS.
.SH DESCRIPTION
.PP
Termux is an Android terminal emulator and Linux environment application
that works directly with no rooting or setup required.
A minimal base system is installed automatically, additional packages
are available using the package manager.
.PP
Here is a just a brief list of things you can do with Termux:
.IP \[bu] 2
Data processing with Python.
.IP \[bu] 2
Programming in a development environment.
.IP \[bu] 2
Downloading and managing files and pages using time-established tools.
.IP \[bu] 2
Learning the basics of the Linux command line environment.
.IP \[bu] 2
Running an SSH client.
.IP \[bu] 2
Synchronizing and backing up your files.
.PP
Of course, usage is not limited to the topics listed above.
.PP
Note that it is expected that you have at least basic knowledge about
command line and shell scripting.
.SH USER INTERFACE
.PP
At launch Termux shows a terminal interface, whose text size can be
adjusted by pinch zooming or double tapping and pulling the content
towards or from you.
.PP
Besides the terminal there are three additional interface elements
available: a context menu, navigation drawer and notification.
.PP
The context menu can be shown by long pressing anywhere on the terminal.
It provides menu entries for:
.IP \[bu] 2
Selecting and pasting text.
.IP \[bu] 2
Opening URL selector.
.IP \[bu] 2
Sharing text from the terminal to other apps (e.g.\ email or SMS).
.IP \[bu] 2
Launching password autofill service.
.IP \[bu] 2
Resetting the terminal if it gets stuck.
.IP \[bu] 2
Force terminating the current session.
.IP \[bu] 2
Styling the terminal by selecting a font and a color scheme.
.IP \[bu] 2
Check box for toggling screen always on feature.
.IP \[bu] 2
Showing this help page.
.IP \[bu] 2
Opening settings menu.
.IP \[bu] 2
Reporting issue.
.PP
The navigation drawer is revealed by swiping inwards from the left part
of the screen.
It has four elements:
.IP \[bu] 2
Button for opening Termux settings.
.IP \[bu] 2
A list of sessions.
Clicking on a session shows it in the terminal while long pressing
allows you to specify a session title.
.IP \[bu] 2
A button to toggle visibility of the touch keyboard.
.IP \[bu] 2
A button to create new terminal sessions.
Long press it for creating a named session or a fail-safe one.
.PP
The notification, available when a terminal session is running, is
available by pulling down the notification menu.
Pressing the notification leads to the most current terminal session.
It may also be expanded by pinch-zooming or performing a single-finger
glide to expose these actions:
.IP \[bu] 2
Exiting all running terminal sessions.
.IP \[bu] 2
Use a wake lock to avoid entering sleep mode.
.IP \[bu] 2
Use a high performance wifi lock to maximize wifi performance.
.PP
With a wake lock held the notification and Termux background processes
will be available even if no terminal session is running, which allows
server and other background processes to run more reliably.
.SS Using wake-lock
.PP
If you are executing a long operation in Termux and want to turn off
device screen, you need to enable Wake Lock.
You can do that through the notification, by clicking on button
\[lq]Acquire wakelock\[rq] or by executing this command:
.IP
.nf
\f[C]
termux-wake-lock
\f[R]
.fi
.PP
Wake locks are needed to prevent device from going into sleep mode.
If you will not do that, your tasks will run very slowly or even be
paused.
Acquired Wake Lock implies a higher battery usage during standby.
.PP
Please note that Wake Lock does not affect network performance when
screen is off and you may observe a packet loss.
.PP
To release Wake Lock, you need to either run command
.IP
.nf
\f[C]
termux-wake-unlock
\f[R]
.fi
.PP
or click button \[lq]Release wakelock\[rq] in notification.
.SH TOUCH KEYBOARD
.PP
Use of keys like ALT, CTRL, ESC is necessary for working with a command
line programs.
As Android touch keyboards usually do not include such keys, Termux uses
the Volume-Down button to emulate the CTRL key.
For example, holding the Volume-Down and \[lq]L\[rq] on touch keyboard
will send the same input as pressing key combination CTRL+L on a
hardware keyboard.
.PP
The result of using CTRL (Volume-Down) in combination with a key depends
on which program is being used.
See below for the list of common shortcuts usable in most shells.
.TP
\f[B]\f[CB]CTRL+A\f[B]\f[R]
Move cursor to the beginning of line
.TP
\f[B]\f[CB]CTRL+C\f[B]\f[R]
Abort current process by sending SIGINT
.TP
\f[B]\f[CB]CTRL+D\f[B]\f[R]
Logout of a terminal session by sending EOF
.TP
\f[B]\f[CB]CTRL+E\f[B]\f[R]
Move cursor to the end of line
.TP
\f[B]\f[CB]CTRL+K\f[B]\f[R]
Delete from cursor to the end of line
.TP
\f[B]\f[CB]CTRL+U\f[B]\f[R]
Delete from cursor to the beginning of line
.TP
\f[B]\f[CB]CTRL+L\f[B]\f[R]
Clear the terminal
.TP
\f[B]\f[CB]CTRL+Z\f[B]\f[R]
Suspend current process by sending SIGTSTP
.TP
\f[B]\f[CB]CTRL+W\f[B]\f[R]
Clear prompt before word
.PP
The Volume-Up key also serves as a special key to produce certain input.
But please note that Volume-Up is not equivalent of the ALT key.
.TP
\f[B]\f[CB]Volume-Up+E\f[B]\f[R]
Escape key
.TP
\f[B]\f[CB]Volume-Up+T\f[B]\f[R]
Tab key
.TP
\f[B]\f[CB]Volume-Up+1\f[B]\f[R]
F1, Volume-Up+2 will produce F2, etc
.TP
\f[B]\f[CB]Volume-Up+0\f[B]\f[R]
F10 key
.TP
\f[B]\f[CB]Volume-Up+B\f[B]\f[R]
ALT+B, back a word when using Readline
.TP
\f[B]\f[CB]Volume-Up+F\f[B]\f[R]
ALT+F, forward a word when using Realine
.TP
\f[B]\f[CB]Volume-Up+X\f[B]\f[R]
ALT+X
.TP
\f[B]\f[CB]Volume-Up+W\f[B]\f[R]
Up arrow key
.TP
\f[B]\f[CB]Volume-Up+A\f[B]\f[R]
Left arrow key
.TP
\f[B]\f[CB]Volume-Up+S\f[B]\f[R]
Down arrow key
.TP
\f[B]\f[CB]Volume-Up+D\f[B]\f[R]
Right arrow key
.TP
\f[B]\f[CB]Volume-Up+L\f[B]\f[R]
\f[B]|\f[R], the pipe character
.TP
\f[B]\f[CB]Volume-Up+H\f[B]\f[R]
\f[B]\[ti]\f[R], the tilde character
.TP
\f[B]\f[CB]Volume-Up+U\f[B]\f[R]
\f[B]_\f[R], the underscore character
.TP
\f[B]\f[CB]Volume-Up+P\f[B]\f[R]
Page Up key
.TP
\f[B]\f[CB]Volume-Up+N\f[B]\f[R]
Page Down key
.TP
\f[B]\f[CB]Volume-Up+.\f[B]\f[R]
CTRL+\[rs], send SIGQUIT
.TP
\f[B]\f[CB]Volume-Up+V\f[B]\f[R]
Show the volume control
.TP
\f[B]\f[CB]Volume-Up+Q\f[B]\f[R]
Toggle extra keys row
.TP
\f[B]\f[CB]Volume-Up+K\f[B]\f[R]
Another variant to toggle extra keys row
.PP
Termux supports the special key row which allows you to specify desired
keys like CTRL or ESC or their combinations.
See section \f[B]EXTRA KEYS ROW\f[R].
.SH HARDWARE KEYBOARD
.PP
The following shortcuts are available when using Termux with a hardware
(e.g.\ Bluetooth) keyboard:
.TP
\f[B]\f[CB]CTRL+ALT+C\f[B]\f[R]
Create new session
.TP
\f[B]\f[CB]CTRL+ALT+R\f[B]\f[R]
Rename current session
.TP
\f[B]\f[CB]CTRL+ALT+<DOWN>\f[B]\f[R]
Switch to next session
.TP
\f[B]\f[CB]CTRL+ALT+<UP>\f[B]\f[R]
Switch to previous session
.TP
\f[B]\f[CB]CTRL+ALT+<RIGHT>\f[B]\f[R]
Open drawer
.TP
\f[B]\f[CB]CTRL+ALT+<LEFT>\f[B]\f[R]
Close drawer
.TP
\f[B]\f[CB]CTRL+ALT+K\f[B]\f[R]
Toggle soft keyboard.
.TP
\f[B]\f[CB]CTRL+ALT+M\f[B]\f[R]
Show menu
.TP
\f[B]\f[CB]CTRL+ALT+U\f[B]\f[R]
Select URL
.TP
\f[B]\f[CB]CTRL+ALT+V\f[B]\f[R]
Paste clipboard content
.TP
\f[B]\f[CB]CTRL+ALT+ (+/-)\f[B]\f[R]
Adjust font size
.TP
\f[B]\f[CB]CTRL+ALT+ (1-9)\f[B]\f[R]
Go to numbered session
.PP
These shortcuts do not work with touch keyboard or extra keys row.
.SH CONFIGURATION
.PP
All Termux configuration is done through text file located at
.IP
.nf
\f[C]
\[ti]/.termux/termux.properties
\f[R]
.fi
.PP
It uses a simple key=value property syntax.
See below for all supported properties.
.PP
Note that updated configuration takes effect only when you have executed
.IP
.nf
\f[C]
termux-reload-settings
\f[R]
.fi
.PP
or have restarted the application.
.TP
\f[B]\f[CB]allow-external-apps\f[B]\f[R]
If set to \[lq]true\[rq], external applications are allowed to execute
arbitrary commands within the Termux environment through the RUN_COMMAND
intent, if permission com.termux.permission.RUN_COMMAND has been
granted.
.RS
.PP
This option is also required for functionality of \f[B]termux-open\f[R]
and other things using Content Provider as of Termux v0.118+.
.RE
.TP
\f[B]\f[CB]back-key\f[B]\f[R]
Controls the behaviour of key \[lq]back\[rq].
.RS
.PP
Accepts a one of these values:
.IP \[bu] 2
\f[B]back\f[R] - The default.
A standard behaviour of Android OS, will hide touch keyboard if shown,
if not - move to home screen without closing application.
.IP \[bu] 2
\f[B]escape\f[R] - When set, touching the key will send escape
character.
.RE
.TP
\f[B]\f[CB]bell-character\f[B]\f[R]
Controls the behaviour of bell characters.
.RS
.PP
Accepts a one of these values:
.IP \[bu] 2
\f[B]vibrate\f[R] - vibrate the device.
.IP \[bu] 2
\f[B]beep\f[R] - short sound beep.
.IP \[bu] 2
\f[B]ignore\f[R] - ignore bell characters.
.PP
If property is not being set, the default behaviour is equivalent to
\[lq]bell-character=vibrate\[rq].
.RE
.TP
\f[B]\f[CB]ctrl-space-workaround\f[B]\f[R]
Set this to \[lq]true\[rq] if ctrl+space key combination does not work
on hardware keyboard.
.TP
\f[B]\f[CB]default-working-directory\f[B]\f[R]
An absolute path to default working directory.
Default is Termux home.
.TP
\f[B]\f[CB]disable-hardware-keyboard-shortcuts\f[B]\f[R]
Set this to \[lq]true\[rq] to disable hardware keyboard shortcuts.
.TP
\f[B]\f[CB]disable-terminal-session-change-toast\f[B]\f[R]
Set this to \[lq]true\[rq] to disable toast notifications on terminal
session changes.
.TP
\f[B]\f[CB]enforce-char-based-input\f[B]\f[R]
Set this to \[lq]true\[rq] if you have issues with touch keyboard.
For example text is not being sent to terminal until you tap space.
Or keyboard shows the wrong layout, for example numeric.
.RS
.PP
Recommended for people using Samsung devices with stock touch keyboard.
.PP
This option is disabled by default as cause some issues with correctly
working keyboards.
.RE
.TP
\f[B]\f[CB]extra-keys-style\f[B]\f[R]
Controls the style of extra keys row view.
.RS
.PP
Accepts a one of these values:
.IP \[bu] 2
\f[B]arrows-only\f[R] - use symbols only for arrow buttons.
.IP \[bu] 2
\f[B]arrows-all\f[R] - replace some labels with well-known symbols.
.IP \[bu] 2
\f[B]all\f[R] - use symbols instead labels where possible.
.IP \[bu] 2
\f[B]none\f[R] - don\[cq]t replace labels with symbols at all.
.PP
If extra keys row symbols are not displayed properly, use
\[lq]none\[rq].
.RE
.TP
\f[B]\f[CB]extra-keys-text-all-caps\f[B]\f[R]
Set this to \[lq]true\[rq] to force capitalize the text on extra keys
row buttons.
.TP
\f[B]\f[CB]fullscreen\f[B]\f[R]
Set this to \[lq]true\[rq] to have Termux running in a full screen mode.
.RS
.PP
The full screen mode may not work correctly on some devices.
This issue can be fixed by enabling \[lq]use-fullscreen-workaround\[rq].
.RE
.TP
\f[B]\f[CB]hide-soft-keyboard-on-startup\f[B]\f[R]
Set this to \[lq]true\[rq] to make software keyboard hidden on
application startup.
.TP
\f[B]\f[CB]shortcut.create-session\f[B]\f[R]
Sets a key combination for creating new session.
.RS
.PP
For example, use of
.IP
.nf
\f[C]
shortcut.create-session = ctrl + t
\f[R]
.fi
.PP
will allow to open a new terminal session by pressing CTRL + t.
.RE
.TP
\f[B]\f[CB]shortcut.next-session\f[B]\f[R]
Sets a key combination for switching to the next session.
Value format is same as for \[lq]shortcut.create-session\[rq] property.
.TP
\f[B]\f[CB]shortcut.previous-session\f[B]\f[R]
Sets a key combination for switching to the previous session.
Value format is same as for \[lq]shortcut.create-session\[rq] property.
.TP
\f[B]\f[CB]shortcut.rename-session\f[B]\f[R]
Sets a key combination for opening a dialog for renaming the current
session.
Value format is same as for \[lq]shortcut.create-session\[rq] property.
.TP
\f[B]\f[CB]soft-keyboard-toggle-behaviour\f[B]\f[R]
Controls the behaviour of \[lq]keyboard\[rq] button located in the
drawer.
.RS
.PP
Accepts a one of these values:
.IP \[bu] 2
\f[B]enable/disable\f[R] - whether to enable or disable soft keyboard at
all.
.IP \[bu] 2
\f[B]show/hide\f[R] - whether to show or hide soft keyboard.
.PP
Default is show/hide.
.RE
.TP
\f[B]\f[CB]terminal-cursor-blink-rate\f[B]\f[R]
Controls the cursor blink rate.
Valid value range is from 100 to 2000.
If set to 0, the cursor blinking will be disabled.
.TP
\f[B]\f[CB]terminal-cursor-style\f[B]\f[R]
Controls the style of terminal cursor.
.RS
.PP
Accepts a one of these values:
.IP \[bu] 2
\f[B]block\f[R]
.IP \[bu] 2
\f[B]bar\f[R]
.IP \[bu] 2
\f[B]underline\f[R]
.PP
Default is block.
.RE
.TP
\f[B]\f[CB]terminal-margin-horizontal\f[B]\f[R]
Controls the terminal margin on left and right.
Value is defined in dp units in range from 0 to 100.
Default is 3.
.TP
\f[B]\f[CB]terminal-margin-vertical\f[B]\f[R]
Controls the terminal margin on top and bottom.
Value is defined in dp units in range from 0 to 100.
Default is 0.
.TP
\f[B]\f[CB]terminal-onclick-url-open\f[B]\f[R]
If set to \[lq]true\[rq], clicking on URL link in terminal transcript
will open it.
.TP
\f[B]\f[CB]terminal-toolbar-height\f[B]\f[R]
Controls the terminal toolbar height.
Valid value range is from 0.4 to 3.0.
Default is 1.
.TP
\f[B]\f[CB]terminal-transcript-rows\f[B]\f[R]
Controls how much lines are stored in scrollback buffer.
Valid value range is from 100 to 50000.
Default is 2000.
.RS
.PP
Note that setting high values may affect console rendering performance.
.RE
.TP
\f[B]\f[CB]use-black-ui\f[B]\f[R]
If set to \[lq]true\[rq], application will use primarily black color for
the most of user interface elements.
.RS
.PP
Setting this to \[lq]false\[rq] will have opposite effect.
.PP
If the property is not set, then application will choose colors
accordingly to the current system theme.
.RE
.TP
\f[B]\f[CB]use-fullscreen-workaround\f[B]\f[R]
Set this to \[lq]true\[rq] if experience issues with full screen mode.
.TP
\f[B]\f[CB]volume-keys\f[B]\f[R]
Controls the behaviour of volume buttons.
.RS
.PP
Accepts a one of these values:
.IP \[bu] 2
\f[B]virtual\f[R] - volume buttons will act as special keys.
.IP \[bu] 2
\f[B]volume\f[R] - control sound volume as usual.
.PP
Default is \[lq]virtual\[rq].
.RE
.SH EXTRA KEYS ROW
.PP
Termux also has an extra keys row(s) which allows you to extend your
current keyboard.
To enable the extra keys row you have to long tap on the keyboard button
in the left drawer menu or Volume-Down+K key combination.
.PP
Layout of the extra keys rows is configurable through the standard
Termux configuration file located in
.IP
.nf
\f[C]
\[ti]/.termux/termux.properties
\f[R]
.fi
.PP
See section \f[B]CONFIGURATION\f[R] to learn more about Termux
properties.
.PP
Sample configuration of 2 extra keys rows:
.IP
.nf
\f[C]
extra-keys = [ \[rs]
  [\[aq]ESC\[aq],\[aq]/\[aq],\[aq]-\[aq],\[aq]HOME\[aq],\[aq]UP\[aq],\[aq]END\[aq],\[aq]PGUP\[aq]], \[rs]
  [\[aq]TAB\[aq],\[aq]CTRL\[aq],\[aq]ALT\[aq],\[aq]LEFT\[aq],\[aq]DOWN\[aq],\[aq]RIGHT\[aq],\[aq]PGDN\[aq]] \[rs]
]
\f[R]
.fi
.PP
Configuration may be done as one line or be spread between multiple
lines by using backslashes like in example above.
.PP
Value format is 2-dimensional JSON array.
.PP
It is possible to configure a popups buttons which can be triggered by
swiping up on the respective keys.
.PP
Here is a syntax for the popup key object:
.IP
.nf
\f[C]
{key: KEY, popup: POPUP_KEY}
\f[R]
.fi
.PP
Alternate, more advanced syntax for defining the popup:
.IP
.nf
\f[C]
{key: KEY, popup: {macro: \[aq]KEY COMBINATION\[aq], display: \[aq]Key combo\[aq]}}
\f[R]
.fi
.PP
An example of complex Termux extra keys configuration with using popups:
.IP
.nf
\f[C]
extra-keys = [[ \[rs]
  {key: ESC, popup: {macro: \[dq]CTRL f d\[dq], display: \[dq]tmux exit\[dq]}}, \[rs]
  {key: CTRL, popup: {macro: \[dq]CTRL f BKSP\[dq], display: \[dq]tmux \[<-]\[dq]}}, \[rs]
  {key: ALT, popup: {macro: \[dq]CTRL f TAB\[dq], display: \[dq]tmux \[->]\[dq]}}, \[rs]
  {key: TAB, popup: {macro: \[dq]ALT a\[dq], display: A-a}}, \[rs]
  {key: LEFT, popup: HOME}, \[rs]
  {key: DOWN, popup: PGDN}, \[rs]
  {key: UP, popup: PGUP}, \[rs]
  {key: RIGHT, popup: END}, \[rs]
  {macro: \[dq]ALT j\[dq], display: A-j, popup: {macro: \[dq]ALT g\[dq], display: A-g}}, \[rs]
  {key: KEYBOARD, popup: {macro: \[dq]CTRL d\[dq], display: exit}} \[rs]
]]
\f[R]
.fi
.SS SUPPORTED KEYS
.PP
Each key \[lq]entry\[rq] can be either a string such as `|', `/', `=' or
one of the values listed below.
.IP \[bu] 2
CTRL (\[lq]special key\[rq])
.IP \[bu] 2
ALT (\[lq]special key\[rq])
.IP \[bu] 2
FN (\[lq]special key\[rq])
.IP \[bu] 2
SPACE
.IP \[bu] 2
ESC
.IP \[bu] 2
TAB
.IP \[bu] 2
HOME
.IP \[bu] 2
END
.IP \[bu] 2
PGUP
.IP \[bu] 2
PGDN
.IP \[bu] 2
INS
.IP \[bu] 2
DEL
.IP \[bu] 2
BKSP
.IP \[bu] 2
UP
.IP \[bu] 2
LEFT
.IP \[bu] 2
RIGHT
.IP \[bu] 2
DOWN
.IP \[bu] 2
ENTER
.IP \[bu] 2
BACKSLASH
.IP \[bu] 2
QUOTE
.IP \[bu] 2
APOSTROPHE
.IP \[bu] 2
F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12
.IP \[bu] 2
KEYBOARD (hide the keyboard)
.IP \[bu] 2
DRAWER (open app drawer)
.PP
Each of the three \[lq]special keys\[rq] listed above should only be
listed at most ONCE in the extra-keys definition i.e.\ do NOT have more
than one CTRL key.
Having more than one instance of any \[lq]special key\[rq] will result
in a bug whereby those keys do not function correctly.
.PP
A note about backslash: this character has special meaning and you
should not use it directly to define a key.
Use `BACKSLASH' instead, otherwise properly escape it -
\f[C]\[aq]\[rs]\[rs]\[rs]\[rs]\[aq]\f[R].
.SS TEXT INPUT VIEW
.PP
Termux does not support the advanced features of touch keyboards like
autocorrection, prediction and swipe typing.
To solve this, it provides a text input view.
Text entered in it will get pasted to the terminal.
Because it is a native Android text input view, all touch keyboard
features will work.
To access the text input view you have to swipe the extra keys row to
the left.
.SH DIFFERENCES FROM LINUX DISTRIBUTIONS
.PP
Termux does not guarantee full compatibility with GNU/Linux environment
and you may observe inconvenient behaviour of some utilities, especially
from those which were not officially ported to Android OS (Termux).
See below to learn about the major differences.
.TP
\f[B]\f[CB]No compliance with Filesystem Hierarchy Standard\f[B]\f[R]
Termux does not follow Filesystem Hierarchy Standard because Android
does not make root file system world-writable and Termux is not a
virtual machine.
.RS
.PP
All files are stored within the application private directory on
internal storage to ensure that application has full control over its
files and also special features like symlinks or file access modes
(\f[B]chmod(1)\f[R]).
.PP
The data is being stored in 2 main locations:
.TP
\f[B]\f[CB]/data/data/com.termux/files/home\f[B]\f[R]
A home directory where user can place his files.
.TP
\f[B]\f[CB]/data/data/com.termux/files/usr\f[B]\f[R]
The prefix - a place where all packages are being extracted during
installation.
Has a directory structure similar to the root file system of traditional
Linux distributions.
.PP
You may have problems with running some utilities accessing standard
directories like /var or /tmp.
.PP
Termux has some workarounds for that.
For example, it preloads a shared library \[lq]libtermux-exec.so\[rq]
which intercepts \[lq]execve()\[rq] and maps /bin to directory located
in the prefix.
.PP
With utility \f[B]termux-chroot\f[R] that comes as part of package
\f[B]proot(1)\f[R] you should be able to emulate a FHS-compliant root
file system.
.RE
.TP
\f[B]\f[CB]No GNU libc\f[B]\f[R]
Termux does not use GNU libc.
Instead it uses a Bionic libc and dynamic linker provided by Android OS.
.RS
.PP
Programs linked with GNU libc will not work in Termux.
Bionic libc has different ABI and dynamic linker path.
You likely will observe weird messages \[lq]No such file or
directory\[rq] when attempting to run executable file but know that file
is present.
That happens because dynamic linker cannot be started because does not
exist on expected location.
.PP
Programs which were statically-linked with GNU libc may misbehave too.
You may get a \[lq]Bad system call\[rq] errors.
Also networking software will likely show DNS resolution errors because
Android does not provide \f[C]/etc/resolv.conf\f[R] and by default even
in statically-linked programs GNU libc still uses libresolv as shared
library which is not present.
.PP
Consider to rebuild your software in Termux environment by using clang.
.RE
.TP
\f[B]\f[CB]Only one user\f[B]\f[R]
Termux environment is single-user only.
It operates under user id assigned by Android OS which you cannot
change.
.RS
.PP
There no privilege separation, all Termux files such as package data or
user data in home directory is owned by same user id.
Be extremely careful when executing third-party scripts as they can
easily do unauthorized modifications which may lead to broken Termux
installation or lost user data.
.RE
.SH PACKAGE MANAGEMENT
.PP
Termux uses \f[B]apt(8)\f[R] as package manager, just like Debian.
However we highly recommend to use our wrapper \f[B]pkg\f[R] which
simplifies certain tasks and also automatically picks the mirror to help
reduce traffic usage on the origin repositories.
See its usage below.
.PP
Installing package:
.IP
.nf
\f[C]
pkg install <package name>
\f[R]
.fi
.PP
Uninstall package:
.IP
.nf
\f[C]
pkg uninstall <package name>
\f[R]
.fi
.PP
Reinstall package:
.IP
.nf
\f[C]
pkg reinstall <package name>
\f[R]
.fi
.PP
List the all available packages:
.IP
.nf
\f[C]
pkg list-all
\f[R]
.fi
.PP
List the installed packages:
.IP
.nf
\f[C]
pkg list-installed
\f[R]
.fi
.PP
Search packages:
.IP
.nf
\f[C]
pkg search <query>
\f[R]
.fi
.PP
Upgrade packages:
.IP
.nf
\f[C]
pkg upgrade
\f[R]
.fi
.PP
Termux implements a rolling-release updates scheme to reduce amount of
work needed to maintain packages since developer team is small.
You need to check for updates on a regular basis, especially before
installing a new package.
Otherwise at some day your environment may become broken.
.PP
If you prefer to use \f[B]apt(8)\f[R] over \f[B]pkg\f[R], please ensure
that for installing updates you use these commands:
.IP
.nf
\f[C]
apt update
apt full-upgrade
\f[R]
.fi
.PP
Also always run \[lq]apt update\[rq] before installing package.
The wrapper \f[B]pkg\f[R] does that for you automatically.
.SH ACCESSING THE STORAGE
.PP
By default Termux does not provide access to storage volumes where you
typically store your files like pictures or documents.
In order to get access to shared storage, execute the next command:
.IP
.nf
\f[C]
termux-setup-storage
\f[R]
.fi
.PP
This will prompt you for Storage Access Permission.
Once it granted, Termux will setup symlinks to various standard
directories under \[lq]\[ti]/storage\[rq].
.TP
\f[B]\f[CB]\[ti]/storage/shared\f[B]\f[R]
The root directory of shared storage.
.TP
\f[B]\f[CB]\[ti]/storage/downloads\f[B]\f[R]
Standard directory where downloaded files are stored.
.TP
\f[B]\f[CB]\[ti]/storage/dcim\f[B]\f[R]
Standard directory where captured photos and video are stored.
.TP
\f[B]\f[CB]\[ti]/storage/pictures\f[B]\f[R]
Standard directory for photo gallery.
.TP
\f[B]\f[CB]\[ti]/storage/music\f[B]\f[R]
Standard directory where music albums are stored.
.TP
\f[B]\f[CB]\[ti]/storage/movies\f[B]\f[R]
Standard directory where videos are stored.
.TP
\f[B]\f[CB]\[ti]/storage/external-1\f[B]\f[R]
The private directory of Termux on external SD-card.
.PP
Note that if you decide to wipe Termux data or uninstall application,
all files stored in private application directories will be deleted.
.SS Note about external storage
.PP
Android does not allow to have a direct write access to external storage
like SD-cards and USB drives unless you are not doing so in private
directories like
.IP
.nf
\f[C]
/storage/0123-ABCD/Android/data/com.termux/files
\f[R]
.fi
.PP
If you want to write files to storage root or directory other than
private one of Termux, you need superuser permissions.
.PP
Android applications like file managers can do that because they use a
special API called Storage Access Framework.
But command line utilities cannot use this one.
.SS Transferring files to Termux
.PP
To put files into Termux, you have 2 variants.
.PP
The first one would be copying or moving files from shared storage into
Termux directory by using \f[B]cp(1)\f[R] or \f[B]mv(1)\f[R].
You may also setup a some file server and access it through localhost.
.PP
The second variant would be usage of file manager application which
supports Storage Access Framework and is able to attach volumes.
Just select \[lq]Termux\[rq] volume from menu and you should be able to
access home directory.
.SS Sharing data to other applications
.PP
You may give a temporary read access to certain files stored within
Termux.
Use command
.IP
.nf
\f[C]
termux-open
\f[R]
.fi
.PP
to do this.
You may specify a MIME type by using option \[lq]--content-type\[rq]
when sharing the file to ensure that it will be opened by correct
application.
.PP
Similarly to sharing files, you may share URL.
You will need to use command \[lq]\f[B]termux-open-url\f[R]\[rq].
.SS Android 11+
.PP
Since Android 11 Termux may not be able to provide the access to shared
and external storage.
This is not a bug.
Just new restrictions which enforce storage access over Android API
which cannot be used by shell.
.PP
From that point you are locked to Termux private directories like $HOME
or such on storage volume:
.IP
.nf
\f[C]
/storage/self/primary/Android/data/com.termux/files
\f[R]
.fi
.PP
You still should be able to exchange files with Termux home directory by
accessing Termux virtual volume through File managers supporting Storage
Access Framework.
.SH BACKUP AND RESTORE
.PP
Termux installation can be backed up by archiving directory $PREFIX and
storing the file in safe location.
A rudimentary backup tools are already bundled with package
`termux-tools', though you are free to use your own.
.PP
How to back up Termux installation ($PREFIX):
.IP
.nf
\f[C]
termux-backup /sdcard/termux.tar.gz
\f[R]
.fi
.PP
How to restore Termux installation from backup:
.IP
.nf
\f[C]
termux-restore /sdcard/termux.tar.gz
\f[R]
.fi
.PP
Note that backup performed this way does not include the content of your
home directory.
Restoring procedure will overwrite the content of $PREFIX deleting all
extra files which were not present in backup archive.
So be careful!
.SH RECOVERY IF SESSION FAILS TO START
.PP
If Termux session cannot be launched due to misconfiguration in
dotfiles, you still should be able to start a failsafe session.
How-to:
.IP "1." 3
Long click on Termux launcher icon.
.IP "2." 3
Select shortcut \[lq]failsafe\[rq].
.PP
Once you are in a failsafe session, navigate to Termux home directory
and rename or delete the dotfiles causing the issue.
Finally, restart the application.
.PP
If problem is not with the dotfiles, for example you have messed up
Termux prefix and do not know what to do, our recommendation is
\f[I]complete reinstallation\f[R] by executing
.IP
.nf
\f[C]
rm -rf /data/data/com.termux/files/usr
\f[R]
.fi
.PP
This will erase all packages but will not touch your home directory.
.SH ENVIRONMENT
.PP
Termux exposes some variables set by Android OS as well as its own.
Here is a brief list of default environment variables, their description
and values.
.TP
\f[B]\f[CB]HOME\f[B]\f[R]
Path to Termux home.
.RS
.PP
Termux home directory is a place for user files.
It is located at
.IP
.nf
\f[C]
/data/data/com.termux/files/home
\f[R]
.fi
.PP
Do not modify the value of this environment variable since Termux
doesn\[cq]t support customizing location of the home directory.
.RE
.TP
\f[B]\f[CB]PREFIX\f[B]\f[R]
Termux installation prefix.
.RS
.PP
A base directory for Termux installation.
It is located at
.IP
.nf
\f[C]
/data/data/com.termux/files/usr
\f[R]
.fi
.PP
Do not modify the value of this environment variable.
Termux packages are not relocatable.
Some of them may also look this variable to find their files.
.RE
.TP
\f[B]\f[CB]PATH\f[B]\f[R]
Utility lookup paths for shells.
.RS
.PP
Used by shells to find command line utilities.
By default, it contains this value:
.IP
.nf
\f[C]
/data/data/com.termux/files/usr/bin
\f[R]
.fi
.PP
You may append or prepend your own paths if needed, for example:
.IP
.nf
\f[C]
export PATH=$PATH:$HOME/bin
\f[R]
.fi
.PP
But make sure that Termux-specific bin directory location is not
missing.
.RE
.TP
\f[B]\f[CB]LANG\f[B]\f[R]
Locale.
.RS
.PP
Mimic support of UTF-8 en_US locale, so programs will properly handle
Unicode characters.
.PP
Default value is \[lq]en_US.UTF-8\[rq].
.PP
As Termux does not support locales, changing this variable is not
recommended and may have unexpected effects.
.RE
.SH FILES
.PP
A list of files which have special meaning for the Termux application.
.TP
\f[B]\f[CB]\[ti]/bin/termux-url-opener\f[B]\f[R]
A script for processing an intent when a third-party application shares
an URL with Termux.
.TP
\f[B]\f[CB]\[ti]/bin/termux-file-editor\f[B]\f[R]
A script for processing an intent when a third-party application shares
a file with Termux.
.TP
\f[B]\f[CB]\[ti]/storage\f[B]\f[R]
A directory containing symlinks to shared or external storages and to
certain standard directories.
.RS
.PP
Do not store files directly under this directory.
Put them to locations accessible through symlinks instead.
.RE
.TP
\f[B]\f[CB]\[ti]/.termux/termux.properties\f[B]\f[R]
Application configuration file.
.TP
\f[B]\f[CB]\[ti]/.termux/colors.properties\f[B]\f[R]
A configuration file containing a color scheme for styling the terminal.
Usually is generated by Termux:Styling add-on.
.TP
\f[B]\f[CB]\[ti]/.termux/font.ttf\f[B]\f[R]
A file containing TTF font data for styling the terminal.
Usually is generated by Termux:Styling add-on.
.SH BUGS
.PP
Report application issues to
<https://github.com/termux/termux-app/issues>.
.PP
Package-related issues should be reported to
<https://github.com/termux/termux-packages/issues>.
.SH SEE ALSO
.PP
Complete and up-to-date infomation about Termux usage is available on
Termux Wiki here: <https://wiki.termux.com/wiki/Main_Page>.
.SH AUTHORS
The Termux project contributors.
