.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "dpkg-buildapi 1"
.TH dpkg-buildapi 1 "2024-03-10" "1.22.6" "dpkg suite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dpkg\-buildapi \- returns the build API level to use during package build
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBdpkg-buildapi\fR [\fIoption\fR...] [\fIcommand\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBdpkg-buildapi\fR is a tool to retrieve the \fBdpkg\-build\-api\fR\|(7) level to
use during build of source Debian packages.
.PP
This program was introduced in dpkg 1.22.0.
.SH "COMMANDS"
.IX Header "COMMANDS"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Show the usage message and exit.
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Show the version and exit.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-c\fR\fIcontrol-file\fR" 4
.IX Item "-ccontrol-file"
Specifies the main source control file to read information from.
The default is \fIdebian/control\fR.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.IP "\fB\s-1DPKG_BUILD_API\s0\fR" 4
.IX Item "DPKG_BUILD_API"
The build \s-1API\s0 level to use.
This is intended to be used internally by the tools executed from
\&\fIdebian/rules\fR to avoid having to parse \fIdebian/control\fR multiple times,
and not to set the global build \s-1API\s0 level from \fIdebian/rules\fR,
otherwise build drivers (such as \fBdpkg\-buildpackage\fR\|(1)) cannot access it.
.SH "FILES"
.IX Header "FILES"
.SS "Packaging support"
.IX Subsection "Packaging support"
.IP "\fB/data/data/com.termux/files/usr/share/dpkg/buildapi.mk\fR" 4
.IX Item "/data/data/com.termux/files/usr/share/dpkg/buildapi.mk"
Makefile snippet that will parse the build \s-1API\s0 level.
